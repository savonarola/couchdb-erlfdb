name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:

permissions:
  contents: read

jobs:
  eunit:
    strategy:
      matrix:
        otp-version: ['24', '25']
        fdb-version: ['7.1.43']
    runs-on: ubuntu-22.04
    env:
      FDB_VERSION: ${{ matrix.fdb-version }}
      # Set to 1 for verbose rebar3 logging
      DEBUG: 0
      # Set to 1 for even more verbose rebar3 logging
      DIAGNOSTIC: 0
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Erlang
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp-version }}
          rebar3-version: '3.17'
      - name: Install FoundationDB
        run: |
          wget https://github.com/apple/foundationdb/releases/download/${FDB_VERSION}/foundationdb-clients_${FDB_VERSION}-1_amd64.deb
          wget https://github.com/apple/foundationdb/releases/download/${FDB_VERSION}/foundationdb-server_${FDB_VERSION}-1_amd64.deb
          sudo dpkg -i foundationdb-clients_${FDB_VERSION}-1_amd64.deb
          sudo dpkg -i foundationdb-server_${FDB_VERSION}-1_amd64.deb
      - name: Compile
        run: rebar3 compile
      - name: EUnit tests
        run: rebar3 eunit

  binding_tester:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        test-name: [api, directory, directory_hca, tuple]
        api-version: [710]
    container:
      image: ghcr.io/emqx/couchdb-erlfdb:erlang-25-fdb-7.1.43
    services:
      foundationdb:
        image: foundationdb/foundationdb:7.1.43
    env:
      REBAR_PROFILE: devcontainer
      # Set to 1 for verbose rebar3 logging
      DEBUG: 0
      # Set to 1 for even more verbose rebar3 logging
      DIAGNOSTIC: 0
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Compile erlfdb
        run: rebar3 compile
      - name: Create FDB cluster file
        env:
          # This needs to match the name of the service above so the script can do
          # a DNS lookup to write down the coordinator IP in the fdb.cluster file
          FDB_COORDINATOR: foundationdb
        shell: bash
        run: bash /usr/local/bin/create_cluster_file.bash
      - name: Initialize FDB database
        run: fdbcli --exec "configure new single ssd"
      - name: Execute unit tests
        run: rebar3 eunit
      - name: Execute binding test
        env:
          TEST_NAME: ${{ matrix.test-name }}
          API_VERSION: ${{ matrix.api-version }}
          COVER_ENABLED: true
          ERL_LIBS: _build/devcontainer+test/lib/erlfdb/
        run: |
          mkdir -p /usr/src/erlfdb/test/
          ln -s $GITHUB_WORKSPACE/test/tester.es /usr/src/erlfdb/test/tester.es
          /usr/src/foundationdb/bindings/bindingtester/bindingtester.py erlang \
              --test-name $TEST_NAME \
              --api-version $API_VERSION \
              --instruction-prefix $TEST_NAME \
              --num-ops 10000
      - name: Upload results to Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: bindingtest-${{ matrix.test-name }}-${{ matrix.api-version }}
        run: rebar3 as test coveralls send

  finalize_coverage_report:
    needs: [binding_tester]
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls report
        run: |
          curl https://coveralls.io/webhook \
           --header 'Content-Type: application/json' \
            --data '{
                "repo_name": "${{ github.repository }}",
                "repo_token": "${{ secrets.GITHUB_TOKEN }}",
                "payload": {
                  "build_num": ${{ github.run_number }},
                  "status": "done"
                }
              }'
